---
- name: Clone bash-it 
  ansible.builtin.git:
    repo: "https://github.com/Bash-it/bash-it.git"
    dest: "{{ user_homedir | default('/home/' + user_name) }}/.bash_it"
    single_branch: yes
    depth: 1
  become: true
  become_user: "{{ user_name }}"

# Not sure how to make this idempotent
- name: Install bash-it
  ansible.builtin.command:
    argv:
      - "{{ user_homedir | default('/home/' + user_name) }}/.bash_it/install.sh"
      - --silent 
      - --no-modify-config
  changed_when: false
  become: true
  become_user: "{{ user_name }}"

- name: Find bash config files in dotfiles/bash
  ansible.builtin.find:
    path: "{{ user_homedir | default('/home/' + user_name) }}/dotfiles/bash/"
    file_type: any
    use_regex: true
    hidden: true
  register: bash_dotfiles

- name: Manage dotfiles
  block:
    - name: Find bash config files
      ansible.builtin.find:
        paths: "{{ user_homedir | default('/home/' + user_name) }}"
        patterns: '.bash*'
        file_type: file
        hidden: true
        recurse: false
      register: bash_config_files
    
    - name: Backup Bash Config Files
      ansible.builtin.copy:
        src: "{{ item.path }}"
        dest: "{{ item.path }}-{{ ansible_date_time.iso8601_basic_short }}"
        remote_src: true
      become: true
      become_user: "{{ user_name }}"
      loop: "{{ bash_config_files.files | default([]) }}"
    
    - name: Find bash config links
      ansible.builtin.find:
        paths: "{{ user_homedir | default('/home/' + user_name) }}"
        patterns: '.bash*'
        file_type: link
        hidden: true
        recurse: false
      register: bash_config_links
    
    - name: Delete Bash Config Files and Links
      ansible.builtin.file:
        path: "{{ item.path }}"
        state: absent
      become: true
      become_user: "{{ user_name }}"
      loop: "{{ bash_config_files.files | default([]) + bash_config_links.files | default([]) }}"
    
    - name: Stow apply bash config files
      ansible.builtin.command: stow . --target "{{ user_homedir | default('/home/' + user_name) }}"
      args:
        chdir: "{{ user_homedir | default('/home/' + user_name) }}/dotfiles/bash"
      register: result
      changed_when: 'result.stderr is search("LINK: ")'
      become: true
      become_user: "{{ user_name }}"
  become: true
  when: bash_dotfiles.files is defined and bash_dotfiles.files | length

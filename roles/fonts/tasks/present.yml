---
- name: Get URLs for latest release of fonts
  ansible.builtin.shell: |
    set -o pipefail
    wget -q -O - https://api.github.com/repos/ryanoasis/nerd-fonts/releases/latest \
    | jq -r '.assets[] | .browser_download_url | select(contains(".tar.xz"))'
  args:
    executable: /bin/bash
  changed_when: false
  register: fonts_url_list
  tags: skip_ansible_lint

- name: Create a font map
  ansible.builtin.set_fact:
    font_map: >
      "{{ font_map 
      | default([]) + [{'name': item | split('/') | last | split('.') 
      | first, 'url': item}] }}"
  loop: "{{ fonts_url_list.stdout_lines }}"

- name: Make sure fonts directory exists
  ansible.builtin.file:
    path: "{{ user_homedir }}/.fonts"
    state: directory
    owner: "{{ user_name }}"
    group: "{{ user_group | default(user_name) }}"
    mode: '0750'
  become: true
  become_user: "{{ user_name }}"

- name: Install individual fonts
  ansible.builtin.unarchive:
    src: "{{ item.url }}"
    dest: "{{ user_homedir }}/.fonts"
    remote_src: true
  become: true
  become_user: "{{ user_name }}"
  loop: "{{ font_map | selectattr('name', 'in', user_font_list) }}"
  when:
    - user_font_list is defined and user_font_list | length
    - "'all' not in user_font_list"

- name: Install all fonts
  ansible.builtin.unarchive:
    src: "{{ item.url }}"
    dest: "{{ user_homedir }}/.fonts"
    remote_src: true
  become: true
  become_user: "{{ user_name }}"
  loop: "{{ font_map }}"
  when: 
    - user_font_list is defined and user_font_list | length
    - "'all' in user_font_list"

---
- name: Create zim_home directory
  ansible.builtin.file:
    path: "{{ user_homedir | default('/home/' + user_name) }}/.zim"
    state: directory
  become: true
  become_user: "{{ user_name }}"

- name: Download zimfw
  ansible.builtin.command: >
    curl -fsSL -o "$ZIM_HOME/zimfw.zsh" "{{ zimfw_download_url }}"
  environment:
    ZIM_HOME: "{{ user_homedir | default('/home/' + user_name) }}/.zim"
  become: true
  become_user: "{{ user_name }}"

- name: Find zsh config files in dotfiles/zsh
  ansible.builtin.find:
    path: "{{ user_homedir | default('/home/' + user_name) }}/dotfiles/zsh/"
    file_type: any
    use_regex: true
    hidden: true
  register: zsh_dotfiles

- name: Manage dotfiles
  block:
    - name: Find zsh config files
      ansible.builtin.find:
        paths: "{{ user_homedir | default('/home/' + user_name) }}"
        patterns: '.zsh*,.zim*'
        file_type: file
        hidden: true
        recurse: false
      register: zsh_config_files
    
    - name: Backup Bash Config Files
      ansible.builtin.copy:
        src: "{{ item.path }}"
        dest: "{{ item.path | split('-') | first }}-{{ ansible_date_time.iso8601_basic_short }}"
        remote_src: true
      become: true
      become_user: "{{ user_name }}"
      loop: "{{ zsh_config_files.files | default([]) }}"
    
    - name: Find zsh config links
      ansible.builtin.find:
        paths: "{{ user_homedir | default('/home/' + user_name) }}"
        patterns: '.zsh*,.zim*'
        file_type: link
        hidden: true
        recurse: false
      register: zsh_config_links
    
    - name: Delete Bash Config Files and Links
      ansible.builtin.file:
        path: "{{ item.path }}"
        state: absent
      become: true
      become_user: "{{ user_name }}"
      loop: "{{ zsh_config_files.files | default([]) + zsh_config_links.files | default([]) }}"
    
    - name: Stow apply zsh config files
      ansible.builtin.command: stow . --target "{{ user_homedir | default('/home/' + user_name) }}"
      args:
        chdir: "{{ user_homedir | default('/home/' + user_name) }}/dotfiles/zsh"
      register: result
      changed_when: 'result.stderr is search("LINK: ")'
      become: true
      become_user: "{{ user_name }}"
  become: true
  when: zsh_dotfiles.files is defined and zsh_dotfiles.files | length

- name: Change the shell to zsh 
  ansible.builtin.user:
    name: "{{ user_name }}"
    shell: /usr/bin/zsh
  become: true

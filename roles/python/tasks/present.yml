---
- name: Create a python virtual environment in the home directory
  ansible.builtin.pip:
    name: "{{ python_modules }}"
    virtualenv: "{{ user_homedir | default('/home/' + user_name) }}/venv"
    virtualenv_site_packages: true
    virtualenv_command: python3 -m venv
  become: true
  become_user: "{{ user_name }}"

- name: Find files in dotfiles/python
  ansible.builtin.find:
    paths: "{{ user_homedir | default('/home/' + user_name) }}/dotfiles/python/"
    use_regex: true
    hidden: true
  become: true
  become_user: "{{ user_name }}"
  register: python_dotfiles

- name: Manage dotfiles
  block:
    - name: Find python config files in home directory
      ansible.builtin.find:
        paths: "{{ user_homedir | default('/home/' + user_name) }}"
        patterns: '.pip,requirements.txt'
        file_type: any
        hidden: true
        recurse: false
      register: python_config_files
    
    - name: Backup python Config Files
      ansible.builtin.copy:
        src: "{{ item.path }}"
        dest: "{{ item.path | split('-') | first }}-{{ ansible_date_time.iso8601_basic_short }}"
        remote_src: true
      become_user: "{{ user_name }}"
      loop: "{{ python_config_files.files | default([]) }}"
    
    - name: Find python config links
      ansible.builtin.find:
        paths: "{{ user_homedir | default('/home/' + user_name) }}"
        patterns: '.pip,requirements.txt'
        hidden: true
        file_type: link
        recurse: false
      register: python_config_links
    
    - name: Delete Bash Config Files and Links
      ansible.builtin.file:
        path: "{{ item.path }}"
        state: absent
      become_user: "{{ user_name }}"
      loop: "{{ python_config_files.files | default([]) + python_config_links.files | default([]) }}"
    
    - name: Stow apply python config files
      ansible.builtin.command: stow . --target "{{ user_homedir | default('/home/' + user_name) }}"
      args:
        chdir: "{{ user_homedir | default('/home/' + user_name) }}/dotfiles/python"
      register: result
      changed_when: 'result.stderr is search("LINK: ")'
      become_user: "{{ user_name }}"
      tags: skip_ansible_lint
  become: true
  when: python_dotfiles.files is defined and python_dotfiles.files | length

- name: Stat requirements.txt in home directory
  ansible.builtin.stat:
    path: "{{ user_homedir | default('/home/' + user_name) }}/requirements.txt"
  become: true
  become_user: "{{ user_name }}"
  register: requirements_file

- name: Install modules from requirements.txt
  ansible.builtin.pip:
    requirements: "{{ user_homedir | default('/home/' + user_name) }}/requirements.txt"
    virtualenv: "{{ user_homedir | default('/home/' + user_name) }}/venv"
    virtualenv_command: python3 -m venv
  become: true
  become_user: "{{ user_name }}"
  when: requirements_file.stat.exists is defined and requirements_file.stat.exists
